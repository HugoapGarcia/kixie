(this.webpackJsonpkixie=this.webpackJsonpkixie||[]).push([[0],{45:function(e,t,n){"use strict";n.r(t);var s=n(2),r=n.n(s),c=n(18),o=n.n(c),i=(n(9),n(3)),l=n.n(i),a=n(4),h=n(7),u=n(19),d=n.n(u),j=n(20),b=n(0);function p(){var e=Math.floor(3*Math.random());return"https://httpbin.org/delay/".concat(e,"?delay=").concat(e)}var x=function(){return[p(),p(),p()]};function O(e){return f.apply(this,arguments)}function f(){return(f=Object(h.a)(l.a.mark((function e(t){return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,console.log("testing: "+t),e.next=4,d.a.get(t,{timeout:1900});case 4:return console.log("%cpass: "+t,"color: green"),e.abrupt("return",!0);case 8:return e.prev=8,e.t0=e.catch(0),console.log("%cfail: "+t,"color: red"),e.abrupt("return",!1);case 12:case"end":return e.stop()}}),e,null,[[0,8]])})))).apply(this,arguments)}function w(e){var t=e.urls,n=Object(s.useState)(t),r=Object(a.a)(n,2),c=r[0],o=r[1],i=Object(s.useState)([]),u=Object(a.a)(i,2),d=u[0],p=u[1],f=Object(s.useState)(!1),w=Object(a.a)(f,2),m=w[0],v=w[1],g=null;function y(e,t){return k.apply(this,arguments)}function k(){return(k=Object(h.a)(l.a.mark((function e(t,n){var s,r,i;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return s=c.map((function(e,t){return t===n&&(e.btnOnPress="active"),e})),o(s),e.next=4,O(t);case 4:return r=e.sent,i=c.map((function(e,s){return e.url===t&&n===s&&(e.test=r?"pass":"fail",e.textColor=r?"pass":"fail",e.btnOnPress="",e.isCompleted=!0),e})),o(i),e.abrupt("return",i[n].isCompleted?"completed":"untested");case 8:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function U(){return(U=Object(h.a)(l.a.mark((function e(){var t,n;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(window.clearTimeout(g),m){e.next=3;break}return e.abrupt("return");case 3:o(c.map((function(e){return{url:e.url,test:"untested",textColor:"",btnOnPress:""}}))),t=[],n=0;case 6:if(!(n<c.length)){e.next=12;break}return e.next=9,y(c[n].url,n).then((function(e){t.push(e)}));case 9:n++,e.next=6;break;case 12:return console.log("All test are done, syste will re-test every 5 seconds:",t),t.length===c.length&&(g=setTimeout((function(){p(t)}),5e3)),e.abrupt("return",t);case 15:case"end":return e.stop()}}),e)})))).apply(this,arguments)}return Object(j.useEffect)((function(){m&&function(){U.apply(this,arguments)}(),m||clearTimeout(g)}),[m,d]),Object(b.jsxs)("div",{children:[Object(b.jsx)("h3",{children:"Health Checker Component"}),Object(b.jsx)("button",{onClick:function(){o(x().map((function(e){return{url:e,test:"untested",textColor:"",btnOnPress:""}})))},children:"Get New URLs"}),Object(b.jsx)("button",{className:m?"active":"",onClick:function(e){return v(!m)},children:"Auto-check"}),Object(b.jsx)("ul",{children:c.map((function(e,t){return Object(b.jsxs)("li",{children:["server ".concat(t," :  ").concat(e.url),Object(b.jsx)("button",{className:e.btnOnPress,onClick:function(n){return y(e.url,t)},children:"test"}),Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("span",{className:e.textColor,children:e.test}),Object(b.jsx)("br",{}),Object(b.jsx)("br",{})]},t)}))})]})}function m(){var e=Object(s.useState)(!1),t=Object(a.a)(e,2),n=t[0],r=t[1],c=Object(s.useState)(x().map((function(e){return{url:e,test:"untested",textColor:"",btnOnPress:""}}))),o=Object(a.a)(c,1)[0];return Object(b.jsxs)("div",{className:"App",children:[Object(b.jsx)("h2",{children:"Server Health Check Page"}),Object(b.jsx)("hr",{}),Object(b.jsx)("button",{onClick:function(e){return r(!n)},children:"Show Health Checker"}),!!n&&Object(b.jsx)(w,{urls:o}),Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("hr",{}),Object(b.jsx)("h3",{children:"Requirements"}),Object(b.jsx)("h4",{children:"Part 1:"}),"Suppose we have an array of URLs that needs to be tested. You are asked to build a reusable component that can display the list of URLs, their status and show buttons that can be used to test the URLs.",Object(b.jsx)("p",{children:"A) Update the code so when the \u201cShow Health Checker\u201d button is pressed:"}),Object(b.jsxs)("ol",{children:[Object(b.jsx)("li",{children:'We show/hide the "HealthChecker" component'}),Object(b.jsx)("li",{children:'Update "HealthChecker" component so it would call the getServerUrls() function to get a list of URLS'}),Object(b.jsx)("li",{children:'Update the component to display each URL with its own test button instead of the text "LIST THE LINKS WITH TEST BUTTONS HERE". Show the "untested" status text underneath.'})]}),"B) Update your code so that when a Test button is pressed you would:",Object(b.jsxs)("ol",{children:[Object(b.jsx)("li",{children:"Call testUrl to perform the test for each URL"}),Object(b.jsx)("li",{children:"Change the color of the button before calling testUrl to indicate it\u2019s being tested"}),Object(b.jsxs)("li",{children:["Show the result underneath the URL as such:",Object(b.jsxs)("ul",{children:[Object(b.jsx)("li",{children:'If testUrl() returns true show "pass" in green.'}),Object(b.jsx)("li",{children:'If testUrl() returns false show "fail" in red.'})]})]}),Object(b.jsx)("li",{children:"Reset the color of the button back to indicate the test has ended"})]}),Object(b.jsxs)("p",{children:[Object(b.jsx)("b",{children:"Recommendation:"})," Make the UI/layout as close as to what you see in the video below."]}),Object(b.jsx)("iframe",{src:"https://player.vimeo.com/video/556437590",width:"640",height:"478",frameBorder:"0",allow:"autoplay; fullscreen; picture-in-picture",allowfullfcreen:"true",title:"Part1"}),Object(b.jsx)("h4",{children:"Part 2:"}),'Add a "Get new URLs" Button that when pressed gets new set of Urls. Replace the previous Urls with the new ones and reset the results underneath each Url to \u201cuntested\u201d.',Object(b.jsxs)("p",{children:[Object(b.jsx)("b",{children:"Note:"})," Since the URLs are dynamically generated please make sure hitting Test button does not regenerate new URLs."]}),Object(b.jsx)("h4",{children:"Part 3:"}),"Suppose we want to continuously test the URLs to detect whether the server is alive or dead.",Object(b.jsxs)("ol",{children:[Object(b.jsx)("li",{children:'Add an "Auto-check" button that automatically tests each URL every 5 seconds.'}),Object(b.jsxs)("li",{children:['The "Auto-check" button is a ',Object(b.jsx)("b",{children:"TOGGLE"})," where re-pressing it will stop the automatic testing of the URLs."]}),Object(b.jsxs)("li",{children:[Object(b.jsx)("b",{children:"Note:"})," Pressing the \u201cGet New URLs\u201d button during the automatic tests should generate new URLs with status of untested. The new URLs should be tested in the next 5 second round."]})]}),Object(b.jsx)("iframe",{src:"https://player.vimeo.com/video/556396090?badge=0&autopause=0&player_id=0&app_id=58479",width:"640",height:"550",frameBorder:"0",allow:"autoplay; fullscreen; picture-in-picture",allowfullfcreen:"true",title:"Part 2-3"}),Object(b.jsx)("h4",{children:"Extra Credit"}),Object(b.jsxs)("ul",{children:[Object(b.jsx)("li",{children:"Clicking Auto-check will immediatly check the URLs and then wait 5 seconds before the next run"}),Object(b.jsx)("li",{children:"Clicking Auto-check will test ALL the URLs synchronously at the same time"})]}),Object(b.jsx)("h3",{children:"CodeSandbox Auto Preview"}),Object(b.jsxs)("span",{children:["By default CodeSandbox has Preview On Edit turned on. As such when you are coding the Browser section of CodeSandbox will refresh automatically and show errors. This behaviour can be turned off so that the browser is only updated when you save a file. Follow steps below to turn off Preview On Edit:",Object(b.jsxs)("ol",{children:[Object(b.jsxs)("li",{children:["Click on"," ",Object(b.jsx)("svg",{viewBox:"0 0 10 7",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"10",className:"sc-bdnylx eoHNwX",children:Object(b.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M7.5 5.806H0v.944h7.5v-.944zm2.25-2.903H0v.944h9.75v-.944zM0 0h9.75v.944H0V0z",fill:"currentColor"})})," ","menu icon next to your name on top left hand side of this page"]}),Object(b.jsx)("li",{children:"Select File | Preferences | CodeSandbox Settings"}),Object(b.jsx)("li",{children:"Select Preview Tab"}),Object(b.jsx)("li",{children:'Turn off "Preview on edit"'})]})]}),Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("br",{}),Object(b.jsx)("hr",{})]})}var v=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,46)).then((function(t){var n=t.getCLS,s=t.getFID,r=t.getFCP,c=t.getLCP,o=t.getTTFB;n(e),s(e),r(e),c(e),o(e)}))};o.a.render(Object(b.jsx)(r.a.StrictMode,{children:Object(b.jsx)(m,{})}),document.getElementById("root")),v()},9:function(e,t,n){}},[[45,1,2]]]);
//# sourceMappingURL=main.2c384df7.chunk.js.map